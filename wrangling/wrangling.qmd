---
title: "Elements of Data Science <br> SDS 322E"
author: "H. Sherry Zhang <br> Department of Statistics and Data Sciences <br> The University of Texas at Austin <br>  <br> Fall 2025"
format: 
  revealjs:
    scrollable: true
    slide-number: true
    show-slide-number: all
    aspectratio: 169
    smaller: true
    theme: serif
    preview-links: auto
    pdf-separate-fragments: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.align = "center", cache = TRUE)
options(pillar.width = 70)
library(tidyverse)
library(tsibble)
library(flipbookr) # remotes::install_github("kjhealy/flipbookr@quarto")
```


Each heading is one lecture (5 lectures)

# Tidy data 

  - data.frame and tibble
  - tidy data principles
  - `tidyr`: pivot_longer, pivot_wider (maybe nest)

# `dplyr` 
  
  - basics: mutate, select, filter, arrange, summarize

# `dplyr` 

  - join data 

# `stringr`: for processing string

  - `stringr` vs. base R
  - regular expression 

# `lubridate`: for processing date and time

  - often the downloaded data is in character format
  - turn into a date format from character string
  - extract components of date and time


```{r}
pkg_df <- cranlogs::cran_downloads(
  packages = c("tidyr", "dplyr", "ggplot2", "readr"), 
  from = "2015-01-01", to = "2024-12-31") |> 
  as_tibble()
pkg_df
```

## Let's plot the count of `ggplot2` package downloads over time

```{r}
pkg_df |> 
  filter(package == "ggplot2") |> 
  ggplot(aes(x = date, y = count)) + 
  geom_line()
```

. . .

**Bad plot!** Why? We can't really see the daily level data. They are all squashed together.

## Solution 1: plot for a shorter period

```{r}
pkg_df |> 
  filter(package == "ggplot2") |> 
  filter(date > as.Date("2024-07-01")) |> 
  ggplot(aes(x = date, y = count)) + 
  geom_line()
```

But we want to read what's the date with the highest count ... The x-axis needs to be formated better `r emo::ji("thinking")`. 

## `scale_x_date`/ `scale_x_datetime`

```{r}
#| code-line-numbers: "6"
pkg_df |> 
  filter(package == "ggplot2") |> 
  filter(date > as.Date("2024-07-01")) |> 
  ggplot(aes(x = date, y = count)) + 
  geom_line() + 
  scale_x_date(date_breaks = "1 month") 
```

## `scale_x_date`/ `scale_x_datetime` + format numbers

```{r}
#| code-line-numbers: "6"
pkg_df |> 
  filter(package == "ggplot2") |> 
  filter(date > as.Date("2024-07-01")) |> 
  ggplot(aes(x = date, y = count)) + 
  geom_line() + 
  scale_x_date(date_breaks = "1 month", date_labels = "%Y %b") + 
  scale_y_continuous(labels = scales::comma)
```

## Solution 2: let's create some summary 

```{r}
pkg_summarized <- pkg_df |> 
  filter(package == "ggplot2") |> 
  group_by(yearmonth = yearmonth(date)) |> 
  summarize(count = sum(count)) 
pkg_summarized
```

## Plot the monthly count

```{r}
pkg_summarized |> 
  ggplot(aes(x = yearmonth, y = count)) + 
  geom_line()
```

## Plot the monthly count

```{r}
pkg_summarized |> 
  ggplot(aes(x = yearmonth, y = count)) + 
  geom_line() 
```

## `tsibble::scale_x_yearmonth()`

```{r}
pkg_summarized |> 
  ggplot(aes(x = yearmonth, y = count)) + 
  geom_line() + 
  tsibble::scale_x_yearmonth(date_breaks = "1 year", date_labels = "%Y") + 
  scale_y_continuous(labels = scales::comma)
  xlab("Year") + 
  ylab("Monthly sum of ggplot2 downloads")
```

## Let's plot all the 4 packages

```{r}
pkg_df |> 
  group_by(yearmonth = yearmonth(date), package) |> 
  summarize(count = sum(count)) |> 
  ggplot(aes(x = yearmonth, y = count, group = package)) + 
  geom_line() + 
  scale_y_continuous(labels = scales::comma) + 
  tsibble::scale_x_yearmonth(date_breaks = "1 year", date_labels = "%Y") + 
  xlab("Year") + 
  ylab("Monthly sum of ggplot2 downloads")
```

## Are facets better?

```{r}
pkg_df |> 
  group_by(yearmonth = yearmonth(date), package) |> 
  summarize(count = sum(count)) |> 
  ggplot(aes(x = yearmonth, y = count, group = package)) + 
  geom_line() + 
  scale_y_continuous(labels = scales::comma) + 
  tsibble::scale_x_yearmonth(date_breaks = "2 year", date_labels = "%Y") + 
  facet_wrap(vars(package)) + 
  xlab("Year") + 
  ylab("Monthly sum of ggplot2 downloads")
```

No....

## How about now?

```{r}
pkg_df |> 
  group_by(yearmonth = yearmonth(date), package) |> 
  summarize(count = sum(count)) |> 
  ggplot(aes(x = yearmonth, y = count, group = package)) + 
  geom_line() + 
  scale_y_continuous(labels = scales::comma) + 
  tsibble::scale_x_yearmonth(date_breaks = "2 year", date_labels = "%Y") + 
  facet_wrap(vars(package), ncol = 1) + 
  xlab("Year") + 
  ylab("Monthly sum of ggplot2 downloads")
```

No ...


## An example of distortion
